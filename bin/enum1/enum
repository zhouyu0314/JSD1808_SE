枚举可读性高，代码安全，不用去管类型。不用考虑取值范围（比如年龄1000岁符合逻辑，但不符合常理）
耦合性低，
枚举不可以new 通过点来访问属性
若想给属性加值，就必须有构造方法；
values() 把每个属性单独成一个枚举类型

综上，我们可以看到，在JDK5中新引入的枚举完美地解决了之前通过常量来表示离散量所带来的问题，
大大加强了程序的可读性、易用性和可维护性，并且在此基础之上又进行了扩展，使之可以像类一样去使用，
更是为Java对离散量的表示上升了一个台阶。
因此，如果在Java中需要表示诸如颜色、方式、类别、状态等等数目有限、形式离散、表达又极为明确的量，
应当尽量舍弃常量表示的做法，而将枚举作为首要的选择。
